# https://szeyusim.medium.com/optimizing-uv-in-github-actions-one-global-cache-to-rule-them-all-9c64b42aee7f
name: Testing

on:
  workflow_call:
  workflow_dispatch:

jobs:
  unittest:
    name: PyTest
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        id: setup-python
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Restore uv caches
        uses: actions/cache/restore@v4
        id: cache-restore
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
            .venv
          key: uv-${{ steps.setup-python.outputs.uv-version }}-env-${{ hashFiles('uv.lock') }}-runner-${{ runner.os }}
          restore-keys: uv-

      - name: Install dependencies for testing
        run: uv sync --group test

      # - name: Setup venv for testing & Install dependencies
      #   if: steps.cache-env.outputs.cache-hit != 'true'
      #   run: |
      #     uv venv
      #     uv sync --group test

      - name: Test and coverage report with pytest
        run: uv run pytest --cov --cov-report xml --junitxml=junit.xml -o junit_family=legacy

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.xml
            junit.xml
            htmlcov/
          retention-days: 7

      - name: Restore uv caches
        if: steps.cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
            .venv
          key: uv-${{ steps.setup-python.outputs.uv-version }}-env-${{ hashFiles('uv.lock') }}-runner-${{ runner.os }}
